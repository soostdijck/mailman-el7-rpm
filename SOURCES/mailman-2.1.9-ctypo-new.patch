diff --git a/Mailman/MTA/Postfix.py b/Mailman/MTA/Postfix.py
index c4f21e4..0a8395b 100644
--- a/Mailman/MTA/Postfix.py
+++ b/Mailman/MTA/Postfix.py
@@ -362,9 +362,9 @@ def checkperms(state):
         if stat and (stat[ST_MODE] & targetmode) <> targetmode:
             state.ERRORS += 1
             octmode = oct(stat[ST_MODE])
-            print _('%(dbfile)s permissions must be 066x (got %(octmode)s)'),
+            print C_('%(dbfile)s permissions must be 066x (got %(octmode)s)'),
             if state.FIX:
-                print _('(fixing)')
+                print C_('(fixing)')
                 os.chmod(dbfile, stat[ST_MODE] | targetmode)
             else:
                 print
diff --git a/bin/change_pw b/bin/change_pw
index 35be13d..b9a36de 100644
--- a/bin/change_pw
+++ b/bin/change_pw
@@ -187,8 +187,8 @@ def main():
                 adminurl = mlist.GetScriptURL('admin', absolute=1)
                 msg = Message.UserNotification(
                     mlist.owner[:], Utils.get_site_email(),
-                    _('Your new %(listname)s list password'),
-                    _('''\
+                    C_('Your new %(listname)s list password'),
+                    C_('''\
 The site administrator at %(hostname)s has changed the password for your
 mailing list %(listname)s.  It is now
 
diff --git a/bin/check_perms b/bin/check_perms
index f0c6795..5ef3306 100755
--- a/bin/check_perms
+++ b/bin/check_perms
@@ -221,7 +221,7 @@ def checkarchives():
     # In addition, on a multiuser system you may want to hide the private
     # archives so other users can't read them.
     if mode & S_IXOTH:
-        print _("""\
+        print C_("""\
 Warning: Private archive directory is other-executable (o+x).
          This could allow other users on your system to read private archives.
          If you're on a shared multiuser system, you should consult the
diff --git a/bin/clone_member b/bin/clone_member
index d9ff224..b262aab 100755
--- a/bin/clone_member
+++ b/bin/clone_member
@@ -133,7 +133,7 @@ def dolist(mlist, options):
     pattern = mlist.GetBannedPattern(options.toaddr)
     if pattern:
         if not options.quiet:
-            print '   ', _('Banned address (matched %(pattern)s)')
+            print '   ', C_('Banned address (matched %(pattern)s)')
         return
 
     # Now change the membership address
diff --git a/bin/fix_url.py b/bin/fix_url.py
index 6523ce2..d4840be 100644
--- a/bin/fix_url.py
+++ b/bin/fix_url.py
@@ -72,7 +72,7 @@ def fix_url(mlist, *args):
     # Make sure list is locked.
     if not mlist.Locked():
         if verbose:
-            print _('Locking list')
+            print C_('Locking list')
         mlist.Lock()
     if urlhost:
         web_page_url = mm_cfg.DEFAULT_URL_PATTERN % urlhost
diff --git a/bin/genaliases b/bin/genaliases
index 29e5b5a..d6b9f07 100644
--- a/bin/genaliases
+++ b/bin/genaliases
@@ -81,7 +81,7 @@ def main():
 
     if not mm_cfg.MTA:
         mta = repr(mm_cfg.MTA)
-        usage(2, _(
+        usage(2, C_(
             "genaliases can't do anything useful with mm_cfg.MTA = %(mta)s."
              ))
 
diff --git a/bin/newlist b/bin/newlist
index 7000396..e52f340 100755
--- a/bin/newlist
+++ b/bin/newlist
@@ -248,7 +248,7 @@ def main():
         try:
             msg = Message.UserNotification(
                 owner_mail, siteowner,
-                _('Your new mailing list: %(listname)s'),
+                C_('Your new mailing list: %(listname)s'),
                 text, mlist.preferred_language)
             msg.send(mlist)
         finally:
diff --git a/bin/reset_pw.py b/bin/reset_pw.py
index e829aef..b71d532 100644
--- a/bin/reset_pw.py
+++ b/bin/reset_pw.py
@@ -38,7 +38,7 @@ import getopt
 
 import paths
 from Mailman import Utils
-from Mailman.i18n import _
+from Mailman.i18n import C_
 
 
 try:
@@ -54,7 +54,7 @@ def usage(code, msg=''):
         fd = sys.stderr
     else:
         fd = sys.stdout
-    print >> fd, _(__doc__.replace('%', '%%'))
+    print >> fd, C_(__doc__.replace('%', '%%'))
     if msg:
         print >> fd, msg
     sys.exit(code)
@@ -74,13 +74,13 @@ def reset_pw(mlist, *args):
 
     listname = mlist.internal_name()
     if verbose:
-        print _('Changing passwords for list: %(listname)s')
+        print C_('Changing passwords for list: %(listname)s')
 
     for member in mlist.getMembers():
         randompw = Utils.MakeRandomPassword()
         mlist.setMemberPassword(member, randompw)
         if verbose:
-            print _('New password for member %(member)40s: %(randompw)s')
+            print C_('New password for member %(member)40s: %(randompw)s')
 
     mlist.Save()
 
diff --git a/bin/sync_members b/bin/sync_members
index d302243..26a5e58 100755
--- a/bin/sync_members
+++ b/bin/sync_members
@@ -261,7 +261,7 @@ def main():
             except Errors.MMAlreadyAMember:
                 pass
             except Errors.MembershipIsBanned, pattern:
-                print ('%s:' % addr), _('Banned address (matched %(pattern)s)')
+                print ('%s:' % addr), C_('Banned address (matched %(pattern)s)')
 
         for laddr, addr in addrs.items():
             # Should be a member, otherwise our test above is broken
diff --git a/bin/update b/bin/update
index 0ac5ffe..b584342 100755
--- a/bin/update
+++ b/bin/update
@@ -452,7 +452,7 @@ def update_qfiles():
         except EnvironmentError, e:
             if e.errno <> errno.ENOTDIR:
                 raise
-            print _('Warning!  Not a directory: %(dirpath)s')
+            print C_('Warning!  Not a directory: %(dirpath)s')
 
 
 
@@ -541,7 +541,7 @@ def dequeue(filebase):
                 msg = data = None
         except EOFError:
             # For some reason the pckfile was empty.  Just delete it.
-            print _('Warning!  Deleting empty .pck file: %(pckfile)s')
+            print C_('Warning!  Deleting empty .pck file: %(pckfile)s')
             os.unlink(pckfile)
     finally:
         if msgfp:
